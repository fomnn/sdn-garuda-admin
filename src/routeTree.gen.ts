/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/auth'
import { Route as IndexImport } from './routes/index'
import { Route as TeachersIndexImport } from './routes/teachers/index'
import { Route as SubjectsIndexImport } from './routes/subjects/index'
import { Route as StudentsIndexImport } from './routes/students/index'
import { Route as ParentsIndexImport } from './routes/parents/index'
import { Route as ClassIndexImport } from './routes/class/index'
import { Route as AuthLoginImport } from './routes/auth/login'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TeachersIndexRoute = TeachersIndexImport.update({
  path: '/teachers/',
  getParentRoute: () => rootRoute,
} as any)

const SubjectsIndexRoute = SubjectsIndexImport.update({
  path: '/subjects/',
  getParentRoute: () => rootRoute,
} as any)

const StudentsIndexRoute = StudentsIndexImport.update({
  path: '/students/',
  getParentRoute: () => rootRoute,
} as any)

const ParentsIndexRoute = ParentsIndexImport.update({
  path: '/parents/',
  getParentRoute: () => rootRoute,
} as any)

const ClassIndexRoute = ClassIndexImport.update({
  path: '/class/',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/class/': {
      id: '/class/'
      path: '/class'
      fullPath: '/class'
      preLoaderRoute: typeof ClassIndexImport
      parentRoute: typeof rootRoute
    }
    '/parents/': {
      id: '/parents/'
      path: '/parents'
      fullPath: '/parents'
      preLoaderRoute: typeof ParentsIndexImport
      parentRoute: typeof rootRoute
    }
    '/students/': {
      id: '/students/'
      path: '/students'
      fullPath: '/students'
      preLoaderRoute: typeof StudentsIndexImport
      parentRoute: typeof rootRoute
    }
    '/subjects/': {
      id: '/subjects/'
      path: '/subjects'
      fullPath: '/subjects'
      preLoaderRoute: typeof SubjectsIndexImport
      parentRoute: typeof rootRoute
    }
    '/teachers/': {
      id: '/teachers/'
      path: '/teachers'
      fullPath: '/teachers'
      preLoaderRoute: typeof TeachersIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/class': typeof ClassIndexRoute
  '/parents': typeof ParentsIndexRoute
  '/students': typeof StudentsIndexRoute
  '/subjects': typeof SubjectsIndexRoute
  '/teachers': typeof TeachersIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/class': typeof ClassIndexRoute
  '/parents': typeof ParentsIndexRoute
  '/students': typeof StudentsIndexRoute
  '/subjects': typeof SubjectsIndexRoute
  '/teachers': typeof TeachersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/class/': typeof ClassIndexRoute
  '/parents/': typeof ParentsIndexRoute
  '/students/': typeof StudentsIndexRoute
  '/subjects/': typeof SubjectsIndexRoute
  '/teachers/': typeof TeachersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/auth/login'
    | '/class'
    | '/parents'
    | '/students'
    | '/subjects'
    | '/teachers'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/auth/login'
    | '/class'
    | '/parents'
    | '/students'
    | '/subjects'
    | '/teachers'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/auth/login'
    | '/class/'
    | '/parents/'
    | '/students/'
    | '/subjects/'
    | '/teachers/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  ClassIndexRoute: typeof ClassIndexRoute
  ParentsIndexRoute: typeof ParentsIndexRoute
  StudentsIndexRoute: typeof StudentsIndexRoute
  SubjectsIndexRoute: typeof SubjectsIndexRoute
  TeachersIndexRoute: typeof TeachersIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  ClassIndexRoute: ClassIndexRoute,
  ParentsIndexRoute: ParentsIndexRoute,
  StudentsIndexRoute: StudentsIndexRoute,
  SubjectsIndexRoute: SubjectsIndexRoute,
  TeachersIndexRoute: TeachersIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth",
        "/class/",
        "/parents/",
        "/students/",
        "/subjects/",
        "/teachers/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth": {
      "filePath": "auth.tsx",
      "children": [
        "/auth/login"
      ]
    },
    "/auth/login": {
      "filePath": "auth/login.tsx",
      "parent": "/auth"
    },
    "/class/": {
      "filePath": "class/index.tsx"
    },
    "/parents/": {
      "filePath": "parents/index.tsx"
    },
    "/students/": {
      "filePath": "students/index.tsx"
    },
    "/subjects/": {
      "filePath": "subjects/index.tsx"
    },
    "/teachers/": {
      "filePath": "teachers/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
